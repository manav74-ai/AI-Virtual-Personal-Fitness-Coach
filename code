# streamlit_app.py
import streamlit as st
import cv2
import mediapipe as mp
import numpy as np
import pandas as pd
import time
from utils.pose_utils import calculate_angle, detect_pose

st.title("AI Virtual Personal Fitness Coach")

run = st.checkbox('Start Camera')
rep_count = 0
stage = None
cap = None
log_data = []

if run:
    cap = cv2.VideoCapture(0)
    stframe = st.empty()

    with mp.solutions.pose.Pose(min_detection_confidence=0.5, min_tracking_confidence=0.5) as pose:
        start_time = time.time()
        while cap.isOpened():
            ret, frame = cap.read()
            if not ret:
                break

            image, results = detect_pose(frame, pose)

            try:
                landmarks = results.pose_landmarks.landmark
                angle = calculate_angle(landmarks[mp.solutions.pose.PoseLandmark.LEFT_HIP.value],
                                        landmarks[mp.solutions.pose.PoseLandmark.LEFT_KNEE.value],
                                        landmarks[mp.solutions.pose.PoseLandmark.LEFT_ANKLE.value])

                if angle > 160:
                    stage = "down"
                if angle < 90 and stage == 'down':
                    stage = "up"
                    rep_count += 1
                    log_data.append([rep_count, round(time.time() - start_time, 2)])

            except:
                pass

            cv2.putText(image, f'Reps: {rep_count}', (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
            stframe.image(image, channels='BGR')

        cap.release()
        cv2.destroyAllWindows()

    df = pd.DataFrame(log_data, columns=['Rep', 'Time'])
    df.to_csv('workout_logs/log.csv', index=False)
    st.success('Workout session logged!')

# requirements.txt
streamlit
opencv-python
mediapipe
numpy
pandas

# .gitignore
__pycache__/
*.pyc
*.csv
.env

# utils/pose_utils.py
import cv2
import numpy as np
import mediapipe as mp

def calculate_angle(a, b, c):
    a = np.array([a.x, a.y])
    b = np.array([b.x, b.y])
    c = np.array([c.x, c.y])

    radians = np.arctan2(c[1]-b[1], c[0]-b[0]) - np.arctan2(a[1]-b[1], a[0]-b[0])
    angle = np.abs(radians*180.0/np.pi)

    if angle > 180.0:
        angle = 360-angle
    return angle

def detect_pose(image, pose):
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    image.flags.writeable = False
    results = pose.process(image)
    image.flags.writeable = True
    image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
    if results.pose_landmarks:
        mp.solutions.drawing_utils.draw_landmarks(image, results.pose_landmarks, mp.solutions.pose.POSE_CONNECTIONS)
    return image, results

# README.md
# AI Virtual Personal Fitness Coach

This app uses **MediaPipe**, **OpenCV**, and **Streamlit** to detect body pose, count repetitions, and give real-time feedback during workouts.

## Features
- Pose detection using webcam
- Real-time angle calculation and rep counting
- Streamlit interface for easy use
- Workout logging in CSV format

## Installation
```bash
pip install -r requirements.txt
```

## Usage
```bash
streamlit run streamlit_app.py
```

## Output
- Repetition counts displayed in real-time
- CSV log saved to `workout_logs/log.csv`

## Demo
![Demo](assets/demo.gif)

---


